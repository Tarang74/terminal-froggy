name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
#   fmt:
#     name: Rustfmt
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: dtolnay/rust-toolchain@nightly
#         with:
#           components: rustfmt
#       - name: Enforce formatting
#         run: cargo fmt --check

#   clippy:
#     name: Clippy
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: dtolnay/rust-toolchain@nightly
#         with:
#           components: clippy
#       - uses: Swatinem/rust-cache@v2
#       - name: Linting
#         run: cargo clippy -- -D warnings

#   test:
#     name: Test
#     runs-on: ubuntu-latest
#     needs: [fmt, clippy]
#     steps:
#       - uses: actions/checkout@v3
#       - uses: dtolnay/rust-toolchain@nightly
#       - uses: Swatinem/rust-cache@v2
#       - name: Run tests
#         run: cargo test

  build-export:
    name: Build and export
    runs-on: ubuntu-latest
    # needs: [test]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --verbose
      - name: Export
        run: |
          ls -la
          touch ./dist/test.html
          git checkout build
          mv dist/* . -f
          git add .
          git commit -m "Github Actions: Deploy"
          git push origin build

        #   rustup target add wasm32-unknown-unknown
        #   cargo install --locked trunk
        #   trunk build --release
        #   git config --local user.email "action@github.com"
        #   git config --local user.name "GitHub Action"
          #   git checkout main -- dist
